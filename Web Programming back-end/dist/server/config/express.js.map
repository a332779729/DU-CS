{"version":3,"sources":["config/express.js"],"names":["app","env","process","NODE_ENV","use","express","static","path","join","config","root","require","set","get","engine","renderFile","bodyParser","urlencoded","extended","json","secret","secrets","session","saveUninitialized","resave","csrf","header","xframe","hsts","maxAge","includeSubDomains","preload","xssProtection"],"mappings":";;;;;;kBAkBe,UAASA,GAAT,EAAc;AACzB,QAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAtB;;AAEA,QAAGF,QAAQ,aAAR,IAAyBA,QAAQ,MAApC,EAA4C;AACxCD,YAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,sBAAOC,IAAjB,EAAuB,MAAvB,CAAf,CAAR;AACAV,YAAII,GAAJ,CAAQO,QAAQ,MAAR,GAAR;AACH;;AAED,QAAGV,QAAQ,YAAX,EAAyB;AACrBD,YAAII,GAAJ,CAAQ,4BAAQG,eAAKC,IAAL,CAAUC,sBAAOC,IAAjB,EAAuB,QAAvB,EAAiC,aAAjC,CAAR,CAAR;AACH;;AAEDV,QAAIY,GAAJ,CAAQ,SAAR,EAAmBL,eAAKC,IAAL,CAAUC,sBAAOC,IAAjB,EAAuB,QAAvB,CAAnB;AACAV,QAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAeN,IAAIa,GAAJ,CAAQ,SAAR,CAAf,CAAR;AACA,QAAGZ,QAAQ,YAAX,EAAyB;AACrBD,YAAII,GAAJ,CAAQ,GAAR,EAAa,iCAAkBJ,IAAIa,GAAJ,CAAQ,SAAR,CAAlB,CAAb;AACH;AACDb,QAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAJ,QAAIY,GAAJ,CAAQ,OAAR,EAAkB,GAAEH,sBAAOC,IAAK,eAAhC;AACAV,QAAIc,MAAJ,CAAW,MAAX,EAAmBH,QAAQ,KAAR,EAAeI,UAAlC;AACAf,QAAIY,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAZ,QAAII,GAAJ,CAAQ,4BAAR;AACAJ,QAAII,GAAJ,CAAQY,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAlB,QAAII,GAAJ,CAAQY,qBAAWG,IAAX,EAAR;AACAnB,QAAII,GAAJ,CAAQ,+BAAR;AACAJ,QAAII,GAAJ,CAAQ,6BAAR;;AAEF;AACA;AACAJ,QAAII,GAAJ,CAAQ,8BAAQ;AACdgB,gBAAQX,sBAAOY,OAAP,CAAeC,OADT;AAEdC,2BAAmB,IAFL;AAGdC,gBAAQ;AAHM,KAAR,CAAR;;AAME;;;;AAIA,QAAGvB,QAAQ,MAAR,IAAkBA,QAAQ,aAA7B,EAA4C;AACxCD,YAAII,GAAJ,CAAQ,qBAAM;AACVqB,kBAAM;AACFC,wBAAQ;AADN,aADI;AAIVC,oBAAQ,YAJE;AAKVC,kBAAM;AACFC,wBAAQ,QADN,EACgB;AAClBC,mCAAmB,IAFjB;AAGFC,yBAAS;AAHP,aALI;AAUVC,2BAAe;AAVL,SAAN,CAAR;AAYH;;AAED,QAAG/B,QAAQ,aAAR,IAAyBA,QAAQ,MAApC,EAA4C;AACxCD,YAAII,GAAJ,CAAQ,6BAAR,EADwC,CACf;AAC5B;AACJ,C;;AAxED;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA","file":"express.js","sourcesContent":["/**\n * Express configuration\n */\n\nimport express from 'express';\nimport expressStaticGzip from 'express-static-gzip';\nimport favicon from 'serve-favicon';\nimport morgan from 'morgan';\nimport compression from 'compression';\nimport bodyParser from 'body-parser';\nimport methodOverride from 'method-override';\nimport cookieParser from 'cookie-parser';\nimport errorHandler from 'errorhandler';\nimport path from 'path';\nimport lusca from 'lusca';\nimport config from './environment';\nimport session from 'express-session';\n\nexport default function(app) {\n    var env = process.env.NODE_ENV;\n\n    if(env === 'development' || env === 'test') {\n        app.use(express.static(path.join(config.root, '.tmp')));\n        app.use(require('cors')());\n    }\n\n    if(env === 'production') {\n        app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\n    }\n\n    app.set('appPath', path.join(config.root, 'client'));\n    app.use(express.static(app.get('appPath')));\n    if(env === 'production') {\n        app.use('/', expressStaticGzip(app.get('appPath')));\n    }\n    app.use(morgan('dev'));\n\n    app.set('views', `${config.root}/server/views`);\n    app.engine('html', require('ejs').renderFile);\n    app.set('view engine', 'html');\n    app.use(compression());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(bodyParser.json());\n    app.use(methodOverride());\n    app.use(cookieParser());\n\n  // We need to enable sessions for passport-twitter because it's an\n  // oauth 1.0 strategy, and Lusca depends on sessions\n  app.use(session({\n    secret: config.secrets.session,\n    saveUninitialized: true,\n    resave: false\n  }));\n\n    /**\n     * Lusca - express server security\n     * https://github.com/krakenjs/lusca\n     */\n    if(env !== 'test' && env !== 'development') {\n        app.use(lusca({\n            csrf: {\n                header: 'x-xsrf-token',\n            },\n            xframe: 'SAMEORIGIN',\n            hsts: {\n                maxAge: 31536000, //1 year, in seconds\n                includeSubDomains: true,\n                preload: true\n            },\n            xssProtection: true\n        }));\n    }\n\n    if(env === 'development' || env === 'test') {\n        app.use(errorHandler()); // Error handler - has to be last\n    }\n}\n"]}