{"version":3,"sources":["api/users/users.model.js"],"names":["Schema","mongoose","fullNameSchema","firstName","type","String","required","lastName","userSchema","fullName","userName","unique","emailAddress","User","model"],"mappings":";;;;;;;AAAA;;;;;;AACA,IAAIA,SAASC,mBAASD,MAAtB;;AAEA;;;;;AAMA;AACA,IAAIE,iBAAiBF,OAAO;AAC1B;AACAG,aAAW,EAACC,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAFe;AAG1B;AACAC,YAAU,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB;AAJgB,CAAP,CAArB;;AAOA;AACA,IAAIE,aAAaR,OAAO;AACtB;;;;;;;AAOAS,YAAUP,cARY;AAStB;AACAQ,YAAU,EAACN,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAA+BK,QAAQ,IAAvC,EAVY;AAWtB;AACAC,gBAAc,EAACR,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAA+BK,QAAQ,IAAvC;;AAZQ,CAAP,CAAjB;;AAgBA;;;;;;;;AAQA,IAAIE,OAAOZ,mBAASa,KAAT,CAAe,MAAf,EAAuBN,UAAvB,CAAX;;AAGA;QACQK,I,GAAAA,I","file":"users.model.js","sourcesContent":["import mongoose from 'mongoose';\nlet Schema = mongoose.Schema;\n\n/*\n  This section declares the schemas for the different documents\n  that will be used\n */\n\n\n// This schema represents the fullName of the user\nlet fullNameSchema = Schema({\n  // firstName is a simple String type that is required\n  firstName: {type: String, required: true},\n  // lastName is a simple String type that is required\n  lastName: {type: String, required: true}\n});\n\n// This is the main user schema\nlet userSchema = Schema({\n  /*\n   fullName is a subdocument of User, and will be stored\n   in the same document as the User itself.\n   Unlike a populated document, this doesn't require an\n   ObjectId reference and the schema for name can be\n   referenced directly\n  */\n  fullName: fullNameSchema,\n  // userName is a simple String type that is required\n  userName: {type: String, required: true, unique: true},\n  // emailAddress is a simple String type that is required\n  emailAddress: {type: String, required: true, unique: true},\n\n});\n\n/*\n  This section creates interactive models from the defined schemas\n  above so that you can perform Create Read Update and Delete (CRUD)\n  operations against the schemas.\n  NOTE since the nameSchema is embedded within userSchema, it does NOT have\n  to be created as a model!\n */\n\nlet User = mongoose.model('User', userSchema);\n\n\n// Export the one created User\nexport {User};\n"]}