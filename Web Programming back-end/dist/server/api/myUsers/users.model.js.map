{"version":3,"sources":["api/myUsers/users.model.js"],"names":["User","constructor","users","find","findById","userId","findUser","i","length","user","id","usersId","create","newId","myUser","name","address","age","push","findOneAndUpdate","currentUser","remove","console","log","newUsers"],"mappings":";;;;;;AAAA;;;;;;IAGMA,I,GAAN,MAAMA,IAAN,CAAW;AACTC,gBAAa;AACX,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,SAAO;AACL;AACA,WAAO,KAAKD,KAAZ;AACD;;AAEDE,WAASC,MAAT,EAAiB;AACf;AACA;AACA,QAAIC,WAAW,IAAf;AACA,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAG,KAAKL,KAAL,CAAWM,MAA3B,EAAmCD,GAAnC,EAAuC;AACrC,UAAIE,OAAO,KAAKP,KAAL,CAAWK,CAAX,CAAX;AACA,UAAGE,KAAKC,EAAL,KAAYC,OAAf,EAAuB;AACrBL,mBAAWG,IAAX;AACA;AACD;AACF;AACD;AACA,WAAOH,QAAP;AACD;;AAEDM,SAAOH,IAAP,EAAa;AACX;AACA;AACA;AACA,QAAII,QAAQ,kBAAZ;AACA,QAAIC,SAAU;AACZJ,UAAKG,KADO;AAEZE,YAAMN,KAAKM,IAFC;AAGZC,eAASP,KAAKO,OAHF;AAIZC,WAAKR,KAAKQ;AAJE,KAAd;AAMA,SAAKf,KAAL,CAAWgB,IAAX,CAAgBJ,MAAhB;AACA,WAAOA,MAAP;AACD;;AAEDK,mBAAiBV,IAAjB,EAAuB;AACrB;AACA;AACA;AACA,QAAIH,WAAW,IAAf;AACA,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAG,KAAKL,KAAL,CAAWM,MAA3B,EAAmCD,GAAnC,EAAuC;AACrC,UAAIa,cAAc,KAAKlB,KAAL,CAAWK,CAAX,CAAlB;AACA,UAAGa,YAAYV,EAAZ,KAAmBD,KAAKC,EAA3B,EAA8B;AAC5BJ,mBAAWc,WAAX;AACA;AACD;AACF;AACD,QAAGd,aAAa,IAAhB,EAAqB;AACnBA,eAASS,IAAT,GAAgBN,KAAKM,IAArB;AACAT,eAASU,OAAT,GAAmBP,KAAKO,OAAxB;AACAV,eAASW,GAAT,GAAeR,KAAKQ,GAApB;AACA,aAAO,IAAP;AACD,KALD,MAKK;AACH,UAAIH,SAAU;AACZJ,YAAKD,KAAKC,EADE;AAEZK,cAAMN,KAAKM,IAFC;AAGZC,iBAASP,KAAKO,OAHF;AAIZC,aAAKR,KAAKQ;AAJE,OAAd;AAMA,WAAKf,KAAL,CAAWgB,IAAX,CAAgBJ,MAAhB;AACA,aAAO,KAAP;AACD;AACF;;AAEDO,SAAOZ,IAAP,EAAa;AACXa,YAAQC,GAAR,CAAY,eAAZ,EAA4Bd,IAA5B;AACA;AACA;AACA;AACA,QAAIH,WAAW,IAAf;AACA,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAG,KAAKL,KAAL,CAAWM,MAA3B,EAAmCD,GAAnC,EAAuC;AACrC,UAAIa,cAAc,KAAKlB,KAAL,CAAWK,CAAX,CAAlB;AACA,UAAGa,YAAYV,EAAZ,KAAmBD,KAAKC,EAA3B,EAA8B;AAC5BJ,mBAAWc,WAAX;AACA;AACD;AACF;;AAED,QAAGd,aAAa,IAAhB,EAAqB;AACnB,aAAO,KAAP;AACD,KAFD,MAEK;AACH,UAAIkB,WAAW,EAAf;AACA,WAAI,IAAIjB,IAAE,CAAV,EAAaA,IAAE,KAAKL,KAAL,CAAWM,MAA1B,EAAkCD,GAAlC,EAAsC;AACpC,YAAIa,cAAc,KAAKlB,KAAL,CAAWK,CAAX,CAAlB;AACA,YAAGa,YAAYV,EAAZ,KAAmBD,KAAKC,EAA3B,EAA8B;AAC5Bc,mBAASN,IAAT,CAAcE,WAAd;AACD;AACF;AACD;AACA,WAAKlB,KAAL,GAAasB,QAAb;AACA,aAAO,IAAP;AACD;AACF;AAjGQ,C;kBAoGI,IAAIxB,IAAJ,E","file":"users.model.js","sourcesContent":["import uuidv4 from 'uuid/v4';\n\n\nclass User {\n  constructor(){\n    this.users = [];\n  }\n\n  find() {\n    // Returns a list of all users\n    return this.users;\n  }\n\n  findById(userId) {\n    // Find user by Id\n    // Returns user, or null if not present\n    var findUser = null;\n    for(var i=0; i <this.users.length; i++){\n      var user = this.users[i];\n      if(user.id === usersId){\n        findUser = user;\n        break;\n      }\n    }\n    //maybe return null or value.\n    return findUser;\n  }\n\n  create(user) {\n    // Create a new user\n    // Return created user\n    // Generate the id and overwrite any id that may be present in user\n    let newId = uuidv4();\n    let myUser = ({\n      id : newId,\n      name: user.name,\n      address: user.address,\n      age: user.age\n    });\n    this.users.push(myUser);\n    return myUser;\n  }\n\n  findOneAndUpdate(user) {\n    // Find user and update\n    // If user does not exist, create it using Id provided\n    // Return true if user was updated, false if user was created\n    var findUser = null;\n    for(var i=0; i <this.users.length; i++){\n      var currentUser = this.users[i];\n      if(currentUser.id === user.id){\n        findUser = currentUser;\n        break;\n      }\n    }\n    if(findUser !== null){\n      findUser.name = user.name;\n      findUser.address = user.address;\n      findUser.age = user.age;\n      return true;\n    }else{\n      let myUser = ({\n        id : user.id,\n        name: user.name,\n        address: user.address,\n        age: user.age\n      });\n      this.users.push(myUser);\n      return false;\n    }\n  }\n\n  remove(user) {\n    console.log(\"model-->user:\",user);\n    // Remove user if exists with the Id provided\n    // Return true if removed\n    // Return false if did user not exist\n    var findUser = null;\n    for(var i=0; i <this.users.length; i++){\n      var currentUser = this.users[i];\n      if(currentUser.id === user.id){\n        findUser = currentUser;\n        break;\n      }\n    }\n\n    if(findUser === null){\n      return false;\n    }else{\n      let newUsers = [];\n      for(var i=0; i<this.users.length; i++){\n        var currentUser = this.users[i];\n        if(currentUser.id !== user.id){\n          newUsers.push(currentUser);\n        }\n      }\n      //let result = users.filter(user=> user.id !== id);\n      this.users = newUsers;\n      return true;\n    }\n  }\n}\n\nexport default new User();\n"]}